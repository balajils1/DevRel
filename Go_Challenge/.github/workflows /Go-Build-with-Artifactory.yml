name: Go Build gostatsd App with JFrog Artifactory

on:
  push:
    branches: [ OBD-1888-remove-healthyhostcount-alarm ]
  pull_request:
    branches: [ OBD-1888-remove-healthyhostcount-alarm ]
  workflow_dispatch:

permissions:
  actions: read           # for detecting the Github Actions environment
  id-token: write         # for creating OIDC tokens for signing
  packages: write         # for uploading attestations
  contents: read          # read the contents permission
  security-events: write  # for uploading code scanning

jobs:
  build:
    name: 'Build gostatsd'
    env:
      JFROG_CLI_BUILD_NAME: 'gostatsd-go'
      JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
      JFROG_CLI_BUILD_PROJECT: ${{ vars.JF_PROJECT }}
      JFROG_CLI_LOG_LEVEL: DEBUG
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          # Go version needs to be the same in: CI config, README, Dockerfiles, and Makefile
          go-version: 1.21.4
      
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://${{ vars.JF_URL }}/
        with:
          oidc-provider-name: balajils1
          oidc-audience: balajils1
          version: 2.76.1
          
      - name: Configure Build
        run: |
          jf go-config --repo-resolve=alpha-blr-go-local --repo-deploy=alpha-blr-go-remote
          
      #- name: JFrog Curation Audit
      #  run: |
      #    jf curation-audit
      #- name: Audit Source Code
      #  run: |
          #jf audit --go=true --sca --format=sarif
      #    jf audit --go=true --fail=false --sast --sca --secrets --format=sarif > jfrog_sast.sarif
      #    jf rt upload jfrog_sast.sarif grafana-plugins-generic-local/sarif-gostatd/
      
      - name: Build package
        run: |
          go mod tidy
          jf go build --build-name=${{ env.JFROG_CLI_BUILD_NAME }} --build-number=${{ env.JFROG_CLI_BUILD_NUMBER }} --project=${{ env.JFROG_CLI_BUILD_PROJECT }}
          
      - name: Publish build with info
        run: |
          jf go-publish v1.0.0 --build-name=${{ env.JFROG_CLI_BUILD_NAME }} --build-number=${{ env.JFROG_CLI_BUILD_NUMBER }} --project=${{ env.JFROG_CLI_BUILD_PROJECT }}
          # Collect environment variables for the build
          #jf rt build-collect-env --project ${{ env.JFROG_CLI_BUILD_PROJECT }} ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }}  
          # Collect VCS details from Git and add them to the build
          #jf rt build-add-git --project ${{ env.JFROG_CLI_BUILD_PROJECT }} ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }}
          jf rt build-publish --project ${{ env.JFROG_CLI_BUILD_PROJECT }} ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }}
          sleep 20s
        
      - name: Scan build
        run: |
          jf build-scan --vuln --fail=false --project=${{ env.JFROG_CLI_BUILD_PROJECT }} ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }}
          #jf build-scan ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }}

      #- name: Upload output to generate autofix
      #  uses: github/codeql-action/upload-sarif@v3
      #  with:
      #    sarif_file: jfrog_sast.sarif
     
